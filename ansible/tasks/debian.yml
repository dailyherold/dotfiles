---
  - name: Add PPA repos
    apt_repository:
      repo: "{{ item }}"
    become: yes
    with_items: "{{ ppa_repos }}"
    when: ppa_repos is defined
    tags:
      - repos
      - packages
      - ppa

  - name: Update packages
    apt: upgrade=yes update_cache=yes
    become: yes
    tags:
      - packages

  - name: Install default packages
    apt:
      name: "{{ packages }}"
      state: latest
    become: yes
    tags:
      - packages

  - name: Install debian specific packages
    apt:
      name: "{{ debian_packages }}"
      state: latest
    become: yes
    tags:
      - packages

  - name: Install utility packages
    apt:
      name: "{{ extra_packages }}"
      state: latest
    become: yes
    tags:
      - packages
      - utilities

# Yubikey
#  - name: Install Yubikey ppa using apt_repository module (not working with Mint right now)
#    apt_repository:
#      repo: 'ppa:yubico/stable'
#    tags: yubikey
#  - name: Install Yubikey ppa using shell
#    shell: 'add-apt-repository -y ppa:yubico/stable'
#    become: yes
#    tags: yubikey
#
#  - name: Install Yubikey manager
#    apt:
#      update_cache: yes
#      name: yubikey-neo-manager
#      state: latest
#    become: yes
#    tags: ["yubikey", "packages"]
#
#  - name: Download u2f.rules #https://www.yubico.com/faq/enable-u2f-linux/
#    get_url:
#      dest: /etc/udev/rules.d/u2f.rules
#      url: https://raw.githubusercontent.com/Yubico/libu2f-host/master/70-u2f.rules
#    become: yes
#    tags: yubikey

# Solarized
#  - name: Install dconf
#    apt:
#      name: dconf-cli
#      state: latest
#    become: yes
#    tags: ["solarized","solarized-gnome","packages"]
#
#  - name: Clone gnome terminal solarized colors
#    git:
#      repo: git@github.com:Anthony25/gnome-terminal-colors-solarized.git
#      dest: "{{ current_user_home }}/repos/git/gnome-terminal-colors-solarized"
#      accept_hostkey: yes
#      update: yes
#    tags: ["solarized","solarized-gnome"]
#
#  - name: Set gnome-terminal-colors-solarized
#    shell: ./set_dark.sh
#    args:
#      chdir: "{{ current_user_home }}/repos/git/gnome-terminal-colors-solarized"
#      executable: yes
#    tags: ["solarized","solarized-gnome"]
#
#  - name: Clone solarized dir-colors
#    git:
#      repo: git@github.com:seebi/dircolors-solarized.git
#      dest: "{{ current_user_home }}/repos/git/dircolors-solarized"
#      accept_hostkey: yes
#      update: yes
#    tags: ["solarized","solarized-dircolors"]
#
#  - name: Clone solarized colorscheme for Guake
#    git:
#      repo: https://github.com/coolwanglu/guake-colors-solarized.git
#      dest: "{{ current_user_home }}/repos/git/guake-colors-solarized"
#      accept_hostkey: yes
#      update: yes
#    tags: ["solarized","guake"]
#
#  - name: Set guake solarized colorscheme
#    shell: ./set_dark.sh
#    args:
#      chdir: "{{ current_user_home }}/repos/git/guake-colors-solarized"
#      executable: yes
#    tags: ["solarized","guake"]

# Sensors
#  - name: Install lm-sensors
#    apt:
#      name: lm-sensors
#      state: latest
#    become: yes
#    tags: ["sensors","packages"]
#
#  - name: Detect sensors
#    shell: sensors-detect
#    become: yes
#    tags: sensors
#
#  - name: View sensors
#    shell: sensors
#    register: sensors_output
#    tags: sensors
#
#  - name: Show sensors data
#    debug: var=sensors_output
#    tags: sensors
#
#  - name: Add Psensor ppa
#    shell: 'apt-add-repository -y ppa:jfi/ppa'
#    become: yes
#    tags: sensors
#
#  - name: Install Psensor
#    apt:
#      update_cache: yes
#      name: psensor
#      state: latest
#    become: yes
#    tags: ["sensors", "packages"]

# Dropbox
#  - name: Install Dropbox
#    apt:
#      name: "{{ item }}"
#      state: latest
#    with_items:
#      - dropbox
#      - nemo-dropbox
#    become: yes
#    tags: ["dropbox","packages"]

# nvPY (Notes)
#  - name: Ensure nvPY dependencies
#    apt:
#      state: latest
#      name: "{{ item }}"
#    with_items:
#      - python
#      - python-tk
#      - python-pip
#      - python-markdown
#    become: yes
#    tags: ["nvpy","packages"]
#
#  - name: Install nvPY
#    pip:
#      state: latest
#      name: nvpy
#    become: yes
#    tags: ["nvpy","packages"]
#
#  - name: Set nvPY's conf for local notes synced to Dropbox dir
#    copy:
#      src: .nvpy.cfg
#      dest: "{{ current_user_home }}"
#    tags: ["nvpy","config"]

  # Beyond Compare
  - name: Download Beyond Compare 4
    get_url:
      url: http://www.scootersoftware.com/bcompare-{{ beyondcompare_version }}_amd64.deb
      dest: "{{ ansible_facts['user_dir'] }}/Downloads"
    register: beyondcompare
    tags: beyondcompare

  - name: Install Beyond Compare 4
    apt:
      deb: "{{ beyondcompare.dest }}"
      state: present
    become: yes
    tags: ["beyondcompare","packages"]

# mdless (markdown less)
#  - name: Install mdless gem
#    gem:
#      state: latest
#      name: mdless
#    become: yes
#    tags: ["mdless","gem"]

# sdkman
#  - name: Download sdkman script
#    get_url:
#      dest: "{{ current_user_home }}/sdkman_install"
#      url: http://get.sdkman.io
#      mode: "u+x,g+x,o+x"
#    register: sdkman_script
#    tags: sdkman
#
#  - debug: var=sdkman_script
#    tags: sdkman
#
#  - name: Install sdkman
#    command: /bin/bash {{ sdkman_script.dest }}
#    register: sdkman_install
#    tags: sdkman
#
#  - debug: msg={{ sdkman_install.stdout }}
#    tags: sdkman
