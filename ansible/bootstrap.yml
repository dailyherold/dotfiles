---
- hosts: 127.0.0.1
  connection: local
  remote_user: "{{ lookup('env','USER') }}"
  become_method: sudo

  vars:
    current_user: "{{ lookup('env','USER') }}"
    current_user_home: "{{ lookup('env','HOME') }}"

  vars_files:
    - vars/defaults.yml

  pre_tasks:
    ## DEBUG
    #- debug: var=hostvars[inventory_hostname]

    ## Include user var file if it exists
    - name: Look for user var file
      stat: path=vars/{{ current_user }}.yml
      register: usr_vars
    - name: Include user var file if it exists
      include_vars: vars/{{ current_user }}.yml
      when: usr_vars.stat.exists

    ## Distro specific tasks
    - name: Fedora/Korora tasks
      include: tasks/fedora.yml
      when: ( ansible_distribution == 'Korora') or ( ansible_distribution == 'Fedora' )

    - name: Ubuntu tasks
      include: tasks/ubuntu.yml
      when: ( ansible_distribution == 'Ubuntu') or ( ansible_distribution == 'Debian' )

    # TODO: finish out the rest of this archive download and install
    #- name: Install Postman
    #  get_url: https://app.getpostman.com/app/download/linux64

    - name: Ensure home repos folder
      file:
        state: directory
        path: "{{ ansible_user_dir }}/repos/{{ item }}"
      with_items:
        - git
        - svn

  roles:
    - { role: ssh, tags: [ 'ssh' ] }
    - { role: sublime, tags: [ 'sublime' ] }
    - { role: java, tags: [ 'java' ] }
    - { role: xcape, xcape_install_dir: "{{ ansible_user_dir }}/repos/git", tags: [ 'xcape' ] }
    - { role: spideroak, tags: [ 'spideroak' ] }

  post_tasks:
    - name: Setup git config
      template:
        dest: "{{ ansible_user_dir }}/.gitconfig"
        src: ../templates/.gitconfig.j2

    - name: Ensure dev directory
      file:
        state: directory
        path: "{{ dev_home }}"

    - name: Symlink dotfiles
      command: bin/dfm install chdir={{ ansible_user_dir }}/.dotfiles

    # Refresh fonts after .fonts was symlinked from dotfiles repo
    - name: Refresh font cache
      command: /usr/bin/fc-cache -vf {{ ansible_user_dir }}/.fonts

    - name: Ensure vim swp and backup directories
      file: state=directory path={{ item }}
      with_items:
        - "{{ ansible_user_dir }}/.vim/backup"
        - "{{ ansible_user_dir }}/.vim/swp"

    # TODO: this won't work because on start up vim complains about certain functions not
    # being available and asking to press enter to continue. The plugin install command
    # fixes that, but need to see if there is a way to silence any start up warning/errors
    #
    #- name: Install vim plugins
    #  command: /usr/bin/vim +PluginInstall +qall

    - name: Set custom vmmouse input device tweaks
      copy:
        dest: /etc/X11/xorg.conf.d/50-vmmouse.conf
        src: files/50-vmmouse.conf
        backup: yes
      become: yes
      when: custom_vmmouse == true

    - name: Change .dotfiles repo from https to ssh
      shell: "git remote set-url origin git@github.com:dailyherold/dotfiles.git"

    - name: Set zsh as default shell
      user:
        name: jpherold
        shell: /bin/zsh
        state: present
      become: yes
      when: usr_shell == 'zsh'
