---
- hosts: 127.0.0.1
  connection: local
  remote_user: "{{ lookup('env','USER') }}"
  become_method: sudo

  vars:
    current_user: "{{ lookup('env','USER') }}"
    current_user_home: "{{ lookup('env','HOME') }}"

  vars_files:
    - vars/defaults.yml

  pre_tasks:
    ## DEBUG
    #- debug: var=hostvars[inventory_hostname]

    ## Include user var file if it exists
    - name: Look for user var file
      stat: path=vars/{{ current_user }}.yml
      register: usr_vars
    - name: Include user var file if it exists
      include_vars: vars/{{ current_user }}.yml
      when: usr_vars.stat.exists

    ## Distro specific tasks
    - name: Fedora/Korora tasks
      include: tasks/fedora.yml
      when: ( ansible_distribution == 'Korora') or ( ansible_distribution == 'Fedora' )

    - name: Ubuntu tasks
      include: tasks/ubuntu.yml
      when: ( ansible_distribution == 'Ubuntu') or ( ansible_distribution == 'Debian' )

  roles:
    - ssh

  post_tasks:
    - name: Setup git config
      template:
        dest: "{{ current_user_home }}/.gitconfig"
        src: ../templates/.gitconfig.j2

    - name: Ensure dev directory
      file:
        state: directory
        path: "{{ dev_home }}"

    - name: Symlink dotfiles
      command: bin/dfm install chdir={{ current_user_home }}/.dotfiles

    - name: Vundle'ize vim
      git:
        repo: https://github.com/VundleVim/Vundle.vim.git
        dest: "{{ current_user_home }}/.vim/bundle/Vundle.vim"
        clone: yes

    - name: Ensure vim swp and backup directories
      file: state=directory path={{ item }}
      with_items:
        - "{{ current_user_home }}/.vim/backup"
        - "{{ current_user_home }}/.vim/swp"

    - name: Install vim plugins
      command: /usr/bin/vim +PluginInstall +qall

    - name: Change .dotfiles repo from https to ssh
      shell: "git remote set-url origin git@github.com:dailyherold/dotfiles.git"
